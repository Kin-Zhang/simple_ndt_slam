lidar_frame: "velodyne"
lidar_topic: "/velodyne_points"
odom_topic: "/leg_odom"
imu_topic: "/imu/data"

# output things ================ >
odom_lidar_topic: "/odom_lidar" # sensor_msgs::PointCloud2
output_odom_topic: "/auto_odom" # nav_msgs::Odometry

# will republish point with now timestamp
debug_print: true
use_odom: false
use_imu: false

# whether inverse the imu axis
imu_upside_down: false
odom_inverse: true
incremental_voxel_update: true

# setting -1 mean it will output the whole ndt map ===> FOR THE WHOLE MAP
# setting 10 mean 10*frame_point_num will be saved ===> FOR FAST LOC
save_frame_point: 10

baselink2LiDAR: [0, 0, 0, 0, 0, 0] # x,y,z, roll, pitch, yaw

# parameter's for ndt =========================== >
# Cell Size while mapping using ND (meters) (default 1.0)
resolution: 5.0

# Increment value between iterations while matching (default 0.1)
step_size: 0.5

# Value to decide convergence between iterations (meters) (default 0.01)
trans_epsilon: 0.01

# Maximum number of iterations before stopping matching (default 30)
max_iterations: 30

# Voxel Grid Size of the input scan (downsampling) (default 1.0)
leaf_size: 1.0

# Ignore points closer than this value (meters) (default 5.0)
min_scan_range: 2.0

# Ignore points far than this value (meters) (default 200.0)
max_scan_range: 50.0

# Minimum distance between points to be added to the final map (default 1.0)
min_add_scan_shift: 1.0

# parameter's for segmentation on ground pt =========================== >
process_ground_cloud: true
pub_ground_cloud: true

# check paper to view step: https://ieeexplore.ieee.org/document/5548059
# or chinese blog: https://blog.csdn.net/lovelyaiq/article/details/118826534
n_threads: 8                # number of threads to use.

# 感兴趣的区域
r_min: 0.5                  # minimum point distance.
r_max: 50                   # maximum point distance.
# 整个雷点点云以自己为中心 分为多少个segment，每个segment又分成多少个bin
n_segments: 360             # number of radial segments.
n_bins: 120                 # number of radial bins.
# 雷达传感器高度，主要是+offset
sensor_height: 1.8          # sensor height above ground.
# 直线的slope 斜率，比如一个seg里拟合的线斜率 认为是地面的范围
min_slope: 0.0              # minimum slope of a ground line.
max_slope: 0.3              # maximum slope of a ground line. # 对应T_m
max_fit_error: 0.05         # maximum error of a point during line fit. # 对应 T_RMSE

# 多少vertical distance被算成是ground进入拟和直线
# 同样也是最终判断是否是地面点的决定性参数！
max_dist_to_line: 0.05      # maximum vertical distance of point to line to be considered ground.

# 现在点与要拟合直线的最远点距离是否超过这个值 是的话 long line
# 反之，走 max_start_height 去判断是否进入直线vector
long_threshold: 1.0         # distance between points after which they are considered far from each other.
# 将点z-地面z < max_start_height则计入算直线的vector中
max_start_height: 0.2       # maximum difference to estimated ground height to start a new line.
# 最大的高度变化 否则不认为在一条直线上
max_long_height: 0.1        # maximum height change to previous point in long line.
# seg内角度范围，范围外不进行任何处理
line_search_angle: 0.1      # how far to search in angular direction to find a line [rad].

gravity_aligned_frame: ""   # Frame which has its z axis aligned with gravity. (Sensor frame if empty.)

latch: false                # latch output topics or not
visualize: false            # visualize segmentation result - USE ONLY FOR DEBUGGING